#+STARTUP: indent
* Daily Study/Work/Development Log

*Total Hours (as of Sunday 1st March): 723.5*

(159.5 hours logged prior to October 2019, not graphed).

I track my time rigorously; if you are serious about applying yourself
properly to learning/study it is /no different/ to working in a
full-time job. More precisely, the study /is/ your full-time job if you
wish to succeed.

I started in earnest at the beginning of September, but only got into a
systematic pattern of recording/time tracking on a daily basis once I'd
fully got my workflow/tooling fully established from mid-September
onwards.

The charts below are courtesy of the wonderful [[https://github.com/rksm/clj-org-analyzer/][org-analyzer]] Java/Clojure
program that generates some extremely useful and very attractive
interactive charts in your web-browser based on the time tracking
information stored in Emacs [[https://orgmode.org][org-mode]] files. Emacs is my essential
organisation, non-linear note-taking, life management, editor/IDE, and
all round kitchen sink powerhouse tool! 

Anyone that has used Emacs before will understand what I mean... :-)

*Update 2020:* 

In January I switched to the excellent open source program [[http://rachota.sourceforge.net/en/index.html][Rachota]] for
my time tracking, as it has all of the flexibility of being able to log
by project/task, export to CSV, generate HTML reports, etc., and also
has a more convenient interface for reviewing precisely what you did
each day. Additionally, the daily "target" hours live progress bar when
you're working on a task is highly motivating. From a data integrity
point of view, it stores it all in XML format. 

It is a free, open source, cross platform Java application. Highly
recommended! 

Emacs is brilliant but I have been gradually diversifying to a suite of
separate applications which overall are more flexible and convenient in
each of their respective domains.

*October 2019 - 117 hours*:

[[./img/oct2019-time.png]]

*November 2019 - 112 hours*:

[[./img/nov2019-time.png]] 

*December 2019 - 144 hours*:

[[./img/dec2019-time.png]]

*January 2020 - 97 hours:*

[[./img/jan2020-time.png]] 

*February 2020 - 94 hours:*

[[./img/feb2020-time.png]] 

* Diary/Daily Log                                         :ossu:learninglog:

*2019* 

** *Monday September 23rd:*
  -  Basic Probability Theory
  -  Galton Board
  -  Probability Spaces
  -  Binomial Coefficient/Distribution
  -  Reading "The DevOps Handbook"
  -  Introductory DevOps
  -  Basic Linux overview
** *Tuesday September 24th:*
  -  Configuring FreeBSD under VirtualBox:
    -  Installed apache httpd
    -  Installed mysql80
    -  Installed Xorg (for access to high-resolution console)
    -  Set up guest additions (required for Xorg driver)
    -  xrandr to setup display
  -  Continued with eduonix DevOps E-degree ("Part 1 DevOps Foundation")
  -  Further reading of "DevOps Handbook"
  -  Reading "Sed and Awk" by O'Reilly
** *Wednesday September 25th:*
  -  Backed up/added variety of config files to Github portfolio
  -  Installed and setup Xmonad in basic configuration
  -  Studied and learned about the =$XDG_CONFIG_HOME= and default
    application settings under Linux
** *Thursday September 26th:*
  -  Studying Haskell/confinguring xmonad
  -  Learning about .xprofile/.profile/.xsession/.xsessionrc
** *Friday September 27th:*
  -  DevOps E-degree (various Linux shell commands)
  -  More Probability theory; probability spaces
  -  FreeBSD System/FAMP/VirtualBox configuration
  -  Kernel modules, Xorg modeline, loader.conf settings
** *Saturday September 28th:*
  - VIM practice, cheatsheet building
** *Wednesday October 2nd:*
  - Initial development of secretary file automation software
** *Thursday October 3rd:*
  - Further development and fixes to secretary
** *Friday October 5th:*
  - Spacemacs migration/[re]setup
  - Import configuration from Laptop setup from earlier in Janaury
** *Monday October 7th:* 
  - Development of spacemacs/emacs profile switcher
  (Based on =chemacs= package in conjunction with a bash automation script.)
** *Tuesday October 8th:*
  - Survey of overall projects/work to do
  - Installation of Windows 10 under VirtualBox
  - Installation of Xubuntu 19.04 under VirtualBox
  - Further tests/development of emacs profile switcher under VirtualBox
** *Wednesday October 9th:*
  - Setup email system on Linux desktop:
    - mbsync (isync): IMAP mail retrieval
    - msmtp: Lightweight sendmail replacement for home computers
    - notmuch: Email system for Emacs based on tagging
      - Various filters based on my configuration script
  - Setup of Canon printer on other Linux laptop
  - First real-world production test of secretary program to migrate photos and
    images from camera onto computer (resounding success!). Captured screencast.
** *Thursday October 10th:*
  - Migrated this daily learning/activity log into org-mode. Attempted to
    upate/fill in gaps due to lack of systematic logging prior to today's date
  - Refresher on various Emacs packages
  - Intergrated various work flow practices into Emacs/org-mode
  - Initial export/commit of this to GitHub
  - Configured various filters/regular expressions for e-mail automation
  - Further org-mode conversion and practice with various export format parameters
** *Friday October 11th:*
  - Further extensive work on =secretary= file management program
** *Saturday October 12th:*
   - Significant work on secretary. Almost finished for core functionality.
   - Further org-mode organisation
** *Sunday October 13th:*
- Grokking Garmin FIT file format in order to convert to CSV and use gnuplot
** *Monday October 14th:*
- Garmin FIT file conversion to CSV
- Determining plotting with gnuplot 
- Automated file sorting using =bash=
** *Tuesday October 15th:*
- Windows 10 installation under VirtualBox on Arch Linux laptop
- Arch system update and bug fix of broken systemd unit / installtion of rng-tools
- Creation of rsync backup script to automate spacemacs stable/daily branches
** *Wednesday October 16th:*
- Studied conditional probability and Bayes theorem
- Org-mode tweaks
** *Thursday October 17th:*
- Org-brain conversion/setup
- Printer setup
** *Friday October 18th:*
- Org-brain refactoring 
- Tidying and improving mathematics notes
- Garmin FIT file conversion/export/script
- Scripted new automated file modified date based on filename
- Yas snippet work in EMACS
** *Saturday October 19th:*
- Note conversion and integration 
- Overview/review of current pending projects/tasks
** *Sunday October 20th:*
- Note organisation/review
- File tidying
- Bash prompt/configuration customisation
** *Monday October 21st:*
- Rewrite/refactor backup strategy/rewrite rsync scripts
- Rewrite CVs
** *Tuesday October 22nd:*
- Further note/knowledge management
- Finalised rsync backups 
** *Wednesday October 23rd:*
- Task consolidation
** *Thursday October 24th:*
- Study/reading on Lisp and Lisp dialects
- Read-Eval-Print loop
** *Friday October 25th:*
- Job applications
- CV work 
- Jekyll blogging refresher
- LaTeX mathematical typesetting
** *Saturday October 26th:*
- File tidying
- Studying Lisp programming
** *Sunday October 27th:*
- Configuration fixes
** *Monday October 28th:*
- Setting up org-mode to publish to Jekyll blog, yasnippet templates
- Coursera: Graph Theory
- Config bux fixing
** *Tuesday October 29th:*
- Reading: Structure and Interpretation of Computer Programs
- Coursera: Graph Theory
- DevOps e-Degree / bash shell scripting
** *Wednesday October 30th:*
- DevOps e-Degree
- Lisp programming
** *Thursday October 31st:*
- Reading: Structure and Interpretation of Computer Programs
- Coursera: Graph Theory
- Coursera: Graph Theory
** *Friday November 1st:*
- Coursera: Graph Theory
- edudonix: DevOps 
** *Saturday November 2nd:*
- Coursera: Graph Theory
** *Sunday November 3rd*
- Secretary bash script program
** *Monday November 4th:*
- Coursera - Number theory/cryptography
** *Tuesday November 5th:*
- Coursera - Number theory/cryptography
** *Wednesday November 6th:*
- Reading: Computer Science number systems
- Coursera - Number theory/cryptography
** *Thursday November 7th:*
- DevOps e-Degree / Linux shell + networking
** *Friday November 8th:*
- Coursera: Number theory/Euclid's algorithm
- edX How to Code: Review of data definitions
** *Saturday November 9th:*
- DNS / DNS over HTTPS protocol
- Firefox configuration settings
- Coursera: Number theory/cryptography
** *Sunday November 10th:*
- Coursera: Programming modular arithmetic algorithms
- Coursera: Cryptography / integer factorisation
** *Monday November 11th:*
- Coursera: Cryptographic theory
- Modular arithmetic/exponential, Euler's theorem
** *Tuesday November 12th:*
- Coursera: Cryptographic theory
- Modular arithmetic/algorithms
** *Wednesday November 13th:*
- Coursera: Cryptography / RSA algorithm
- Conditional probability
** *Thursday November 14th:*
- Coursera: Probability. Conditional probability
- Expectation, and Monty Hall paradox
- Random variables and Markov's inequality
** *Friday November 15th:*
- Python coding: Implementing a dice game using probabilistic modelling
** *Saturday November 16th:*
- Reading: Data structures/mathematics of lists/stacks/queues
- Coursera: Permutations/sorting algorithm 
- Gale-Shapely matching algorithm
** *Sunday November 17th:*
- Gale-Shapely matching algorithm 
- RSA cryptographic algorithm 
** *Monday November 18th:*
- Gale-Shapely matching algorithm
- Bjarne Stroustrup C++ podcast 
** *Tuesday November 19th:*
- Coursera: Graph searching/permutation/NP complete problems
- Travelling Salesman/Graph searching algorithms
- Programming approximation algorithm
** *Wednesday November 20th:*
- Reading: Algorithms in C
- Stacks/queues 
** *Thursday November 21st:*
- Reading: Algorithms in C
- Stacks/queues 
** *Friday November 22nd:*
- Reading: Algorithms in C
- Lists/linked-lists (single + double) 
** *Saturday November 23rd:*
- Studied functional vs imperative paradigm:
  - Mutability vs immutability
  - How to code based on stateless references/"object copies"
- Linear Algebra:
  - Solution methods based on two unknowns
  - Three unknowns; substitution & elimination
- Accelerated Computer Science Fundamentals (Coursera)
 - Stacks & Heap Memory
 - Pointers and memory safety
** *Sunday November 24th:*
- Accelerated Computer Science Fundamentals: C++ programming
- C++ programming: classes/templates
- C++ inheritance 
- C++ project
- Linear Algebra/Matrices
** *Monday November 25th:*
- C++ programming
- Linear Algebra
- Ethics of algorithms podcast
** *Tuesday November 26th:*
- C++ constructors/destructors
- C++ copy constructor
- C++ operator overloading
- C++ templating
** *Wednesday November 27th:*
- Portfolio development
- C++ coding
** *Friday November 29th:*
- Portfolio development
- Reading: C++ Programming Language by Stroustrup
** *Saturday November 30th:*
- C++ programming: Linked lists + merge sort
- Python object orientated features
** *Sunday December 1st:*
- C++ programming: Linked lists + merge sort
- C++ Trees/Binary Search Trees (BSTs)
** *Monday December 2nd:*
- C++ recursive BST search algorithm 
- Data structures run-time complexity comparison
- DevOps Foundation project:
 - Bash shell scripting: =crontab= + =tar= + =rsync=
 - Documentation for bash project 
** *Wednesday December 4th:*
- C++ Binary Search Trees
- Reading: C++ Programming Language by Stroustrup
** *Thursday December 5th:*
- AVL trees & B-Trees
- =mysql=, =eclipse=, and =wildfly= installation/configuration
- Eclipse IDE + maven
- Java EE maven build automation
- Reading: C++ Programming Language by Stroustrup
** *Friday December 6th:*
- C++ programming: tree traversal algorithms
- Reading: C++ Programming Language by Stroustrup
** *Saturday December 7th*:
- Java EE: maven =pom= dependency management; inheritance/aggregation
- Java EE: maven modules/web applications (WARS)
** *Sunday December 8th*:
- Java EE: Java Persistence API/Architecture  
- Java EE: Object Relational Mapping (ORM)
** *Monday December 9th*:
- C++ Heap Sort/min(Heap) data structure 
- C++ Priority Queues
** *Tuesday December 10th*:
- MySQL database/SQL table construction
- Bash scripting/shell details
** *Wednesday December 11th*:
- MySQL database design 
- SQL table joins/structure
** *Thursday December 12th*:
- MongoDB design/implementation of non-RDMBS
- Create MongoDB database/JSON syntax   
** *Friday December 13th*:
- C++ hash tables
- Hash table hash function strategies/time-complexity/balance factor trade-offs
- Apache Cassandra architecture
- Java EE: JPA CRUD Operations (create/read/update/delete) 
** *Saturday December 14th*:
- Java EE: JPA queries / annotations 
- JPA Entity relationships 
** *Sunday December 15th*:
- Java EE: JPA =mappedSuperclass= and JPA inheritance
- C++ hashing algorithms/coding 
** *Monday December 16th*:
- Apache Cassandra database creation
- Extensive portfolio update/tidy/READMEs
** *Tuesday December 17th*:
- Apache Cassandra + nodeJS interfacing + jade Javascript templating 
- Extensive portfolio update/additions/READMEs
** *Wednesday December 18th*:
- Apache Cassandra + nodeJS interfacing + jade Javascript templating 
- Futher portfolio update/additions/READMEs
- C++ UpTrees/Disjoint sets
** *Thursday December 19th*:
- Apache Cassandra nodeJS interface/simple web application
- Additional portfolio presentation work
** *Friday December 20th*:
- Apache Cassandra nodeJS web application
- Emacs backup/helper script
** *Saturday December 21st*:
- Disjoint sets & UpTrees
- Java EE using Maven/Spring Boot/JPA
** *Sunday December 22nd*: 
- Documentation/GitHub presentation
** *Monday December 23rd*:
- "Secretary" auto-filing/sorting bash script 
- GitHub presentation
** *Tuesday December 24th*:
- Graph implementions in C++
** *Wednesday December 25th*:
- Graph traversal algorithms in C++
** *Thursday December 26th*:
- Dijkstra/Landmark path algorithms
** *Friday December 27th:*
- GitHub presentation/graphics/documentation
** *Saturday December 28th:*
- GitHub presentation/graphics/documentation
** *Sunday December 29th:*
- GitHub presentation/graphics/documentation
** *Monday December 30th:*
- GitHub presentation/graphics/documentation

*2020*

** *Wednesday January 1st:*
- GitHub presentation/graphics/documentation
** *Friday January 3rd:*
- Relational database systems
- Requirements engineering overview
** *Saturday January 4th*:
- Requirements engineering/risk analysis
** *Sunday January 5th*:
- Requirements engineering/risk analysis
** *Monday January 6th*:
- Requirements engineering; artefact & stakeholder analysis
- Requirements engineering; requirements elicitation
** *Wednesday January 8th*:
- Requirements engineering; artefact & stakeholder analysis
- Requirements engineering; goals & conflict analysis
** *Thursday January 9th*:
- Requirements engineering: SRS documentation
- Requirements engineering: risk analysis
** *Friday January 10th*:
- Requirements engineering: SRS documentation
** *Saturday January 11th*:
- Data Science introduction/overview
** *Sunday January 12th*:
- Data Science; business intelligence, analytics, machine learning overview
- Agile Scrum framework
** *Monday January 13th*:
- Data Science: probability
** *Tuesday January 14th*:
- Data Science: probability
** *Wednesday January 15th*:
- Agile Scrum framework
- Data Science: combinatorics
** *Thursday January 17th*:
- Data Science: Bayesian inference
** *Monday January 20th*:
- Data Science: Distributions
** *Tuesday January 21st*:
- Agile Scrum framework; full project overview
** *Wednesday January 22nd*:
- Database theory/SQL/MySQL
** *Thursday January 23rd*:
- Agile Scrum framework; JIRA/Trello
** *Friday January 24th*:
- Database theory/SQL/MySQL
- GitHub presentation/graphics/documentation
** *Saturday January 25th*:
- Database theory/SQL/MySQL
- Functional Programming (using Standard ML)
** *Sunday January 26th*:
- Database theory/SQL/MySQL
- Functional Programming (using Standard ML)
** *Monday January 27th*:
- AWS overview/practice
- Functional Programming (using Standard ML); bindings, REPL
** *Tuesday January 28th*:
- Functional Programming (using Standard ML); Lists, Tuples
** *Wednesday January 29th*:
- Functional Programming (using Standard ML); Nested Functions, Optins 
** *Thursday January 30th*:
- Functional Programming (using Standard ML); Compound Types, Pattern Matching
** *Friday January 31st*:
- Functional Programming (using Standard ML); Lexical Scope, Map & Filter
** *Saturday February 1st*:
- Data science: descriptive statistics, standard deviation, distributions
** *Tuesday February 4th*:
- Functional Programming (using Standard ML); Polymorphism
** *Wednesday February 5th*:
- Functional Programming (using Standard ML); Closures, Standard Library
** *Thursday February 6th*:
- Functional Programming (using Standard ML); Modules & Signatures
** *Friday February 7th*:
- Functional Programming (using Standard ML); Equivalent functions; Tail Recursion
** *Saturday February 8th*:
- Functional Programming (using Standard ML); Currying, Mutual Recursion, Namespace management  
** *Sunday February 9th*:
- Functional Programming (using Standard ML) 
- Scala reading 
** *Monday February 10th*:
- Functional Programming (using Standard ML) 
** *Tuesday February 11th*:
- Functional Programming (using Standard ML)  
** *Wednesday February 12th*:
- Functional Programming (using Standard ML)
- Scala reading
** *Thursday February 13th*:
- Functional Programming (using Standard ML)
** *Friday February 14th*:
- Functional Programming (using Standard ML)
- IBM Data Science
** *Saturday February 15th*:
- IBM Data Science
** *Sunday February 16th*:
- IBM Data Science
- Functional Programming (using Standard ML)
** *Monday February 17th*:
- IBM Data Science (SQL/Databases)
- Functional Programming (using Standard ML)
** *Tuesday February 18th*:
- Programming in Python (large scale random dice algorithm)
- IBM Data Science (SQL/Databases)
** *Wednesday February 19th*:
- IBM Data Science (Python Programming)
- Functional Programming (using Racket; dynamic typing)
** *Thursday February 20th*:
- IBM Data Science (Python Programming)
- Functional Programming (using Racket; dynamic typing)
** *Saturday February 22nd*:
- IBM Data Science (Python Programming)
** *Monday February 24th*: 
- IBM Data Science (Python Programming)
** *Tuesday February 25th*:
- IBM Data Science (Python Programming; IBM DB2)
** *Wednesday February 26th*:
- GitHub portfolio update
** *Thursday February 27th*:
- IBM Data Science (Python data wrangling)
** *Friday February 28th*:
- IBM Data Science (Python regression models)
** *Saturday February 29th*:
- IBM Data Science (Python polynomial regression and pipelines)
** *Sunday March 1st*:
- IBM Data Science (Python model refinement; fitting; ridge regression)
